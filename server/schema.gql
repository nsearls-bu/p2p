# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""User entity representing a registered user"""
type User {
  """Unique identifier of the user"""
  id: ID!

  """First name of the user"""
  firstName: String!

  """Last name of the user"""
  lastName: String!

  """Cell phone number of the user"""
  cell: String!

  """Email address of the user"""
  email: String!

  """Email address of the user"""
  birthdate: DateTime!

  """Optional image URL of the user"""
  image: String

  """Username chosen by the user"""
  username: String!

  """
  Plaintext password - completely insecure - not included in this project
  """
  password: String!

  """Street address"""
  street: String

  """City"""
  city: String

  """State"""
  state: String

  """Postal code"""
  postalCode: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Chat {
  """ID for each chat"""
  id: ID!

  """ID of message sender"""
  senderID: String!

  """ID of message recipient"""
  recipientID: String!

  """Time message was sent"""
  timeSent: DateTime!

  """Message contents"""
  messageContents: String!
}

"""User entity representing a registered user"""
type ActiveUser {
  """Unique identifier of the user"""
  userID: ID!

  """active users username"""
  username: String!

  """When the user will expire"""
  expiresIn: String!
}

type Query {
  users: [User!]!
  user(username: ID!): User!
  chats(recipientID: String!): [Chat!]!
  active_user: [ActiveUser!]!
}

type Mutation {
  createUser(CreateUser: CreateUser!): User!
  updateUser(UpdateUser: UpdateUser!): User!
  removeUser(username: Int!): User!
  createChat(createChatInput: CreateChatInput!): Chat!
  updateChat(updateChatInput: UpdateChatInput!): Chat!
  removeChat(id: String!): Chat!
  createActiveUser(password: String!, username: String!): ActiveUser!
}

input CreateUser {
  firstName: String!
  lastName: String!
  cell: String!
  email: String!
  image: String
  birthday: DateTime
  username: String!
  password: String!
  street: String
  city: String
  state: String
  postalCode: String
}

input UpdateUser {
  firstName: String
  lastName: String
  cell: String
  email: String
  image: String
  birthday: DateTime
  username: String
  password: String
  street: String
  city: String
  state: String
  postalCode: String

  """Create a user"""
  id: ID!
}

input CreateChatInput {
  """ID of message sender"""
  senderID: String!

  """ID of message recipient"""
  recipientID: String!

  """Contents of message"""
  messageContents: String!
}

input UpdateChatInput {
  """Contents of message"""
  messageContents: String
  id: String!
}